[project]
name = "app"
version = "0.1.0"
description = "Add your description here"
# readme = "README.md"
requires-python = ">=3.12"

dependencies = [
    "aioboto3>=15.0.0",
    "aiosqlite>=0.21.0",
    "asyncpg>=0.30.0",
    "alembic>=1.16.4",
    "bcrypt==4.0.0",
    "celery>=5.5.3",
    "cos-python-sdk-v5>=1.9.38",
    "email-validator>=2.2.0",
    "fastapi[standard]>=0.116.1",
    "passlib[bcrypt]>=1.7.4",
    "psycopg2-binary>=2.9.10",
    "pydantic-settings>=2.10.1",
    "pyjwt>=2.10.1",
    "python-multipart>=0.0.20",
    "sqlalchemy>=2.0.41",
    "tenacity>=9.1.2",
]

[tool.uv]
dev-dependencies = [
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "pytest-mock>=3.14.1",
    "mypy>=1.8.0",
    "ruff>=0.2.2",
    "pytest-html>=4.1.1",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.mypy]
strict = true
exclude = ["venv", ".venv", "alembic"]

[tool.ruff]
target-version = "py312"
exclude = ["alembic"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by formatter
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true
